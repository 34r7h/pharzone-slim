{"version":3,"sources":["blocks/content/content-directive.es6"],"names":[],"mappings":";;AAAA,AAAC,CAAA,YAAY;AACX,cAAY,CAAC;;;;;;;;;;;;;;;;;;AAkBb,SAAO,CACJ,MAAM,CAAC,UAAU,CAAC,CAClB,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;;AAEjC,WAAS,OAAO,CAAC,GAAG,EAAE;AACpB,WAAO;AACL,cAAQ,EAAE,IAAI;AACd,WAAK,EAAE,EAAE;AACT,iBAAW,EAAE,2CAA2C;AACxD,aAAO,EAAE,KAAK;AACd,kBAAY,EAAE,SAAS;AACvB,gBAAU,EAAA,sBAAG;AACX,YAAI,EAAE,GAAG,IAAI,CAAC;AACd,UAAE,CAAC,IAAI,GAAG,SAAS,CAAC;AACpB,UAAE,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACvB,UAAE,CAAC,MAAM,GAAG,UAAC,GAAG,EAAK;AACnB,cAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,iBAAO,GAAG,CAAC,CAAC,CAAC,CAAC;SACf,CAAC;OACH;AACD,UAAI,EAAA,cAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;;AAE1B,YAAI,KAAK,GAAG,CAAC,CAAC;AACd,YAAI,OAAO,GAAG,SAAV,OAAO,GAAS;AAClB,eAAK,EAAE,CAAC;AACR,oBAAU,CAAC,YAAI;AACb,iBAAK,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;AAC3B,iBAAK,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;;AAGrC,aAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,IACnC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAC5F,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAA,AAAC,CAAC;AACrD,iBAAK,CAAC,MAAM,EAAE,CAAC;WAChB,EAAE,GAAG,CAAC,CAAC;SACT,CAAC;AACF,eAAO,EAAE,CAAC;;;;OAIX;KACF,CAAC;GACH;CACF,CAAA,EAAE,CAAE","file":"blocks/content/content-directive.js","sourcesContent":["(function () {\n  'use strict';\n\n  /**\n   * @ngdoc directive\n   * @name pharzone.directive:content\n   * @restrict EA\n   * @element\n   *\n   * @description\n   *\n   * @example\n   <example module=\"pharzone\">\n   <file name=\"index.html\">\n   <content></content>\n   </file>\n   </example>\n   *\n   */\n  angular\n    .module('pharzone')\n    .directive('content', content);\n\n  function content(Api) {\n    return {\n      restrict: 'EA',\n      scope: {},\n      templateUrl: 'blocks/content/content-directive.tpl.html',\n      replace: false,\n      controllerAs: 'content',\n      controller() {\n        let vm = this;\n        vm.name = 'content';\n        vm.models = Api.models;\n        vm.objKey = (obj) => {\n          var key = Object.keys(obj);\n          return key[0];\n        };\n      },\n      link(scope, element, attrs) {\n        /* jshint unused:false */\n        var count = 0;\n        var getData = () => {\n          count++;\n          setTimeout(()=>{\n            scope.name = attrs.content;\n            scope.model = Api.models[scope.name];\n            //console.debug(Api.data.object, Api.state.params);\n            //console.debug('Content '+scope.name, 'Keys'+Object.keys(Api.state.params));\n            !Api.data.object[scope.name] ? getData()\n              : (scope.data = Api.data.object[Object.keys(Api.state.params)][Api.state.params[scope.name]],\n              console.log('Content data available', scope.data));\n            scope.$apply();\n          }, 250);\n        };\n        getData();\n\n        // element.DataTable();\n        /* eslint \"no-unused-vars\": [2, {\"args\": \"none\"}] */\n      }\n    };\n  }\n}());\n"],"sourceRoot":"/source/"}